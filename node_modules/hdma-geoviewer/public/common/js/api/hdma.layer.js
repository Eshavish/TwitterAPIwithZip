if(!window.hdma){window.hdma={}}



hdma.layer={
	/**
	 * create marker cluster layer
	 * @require L.MarkerClusterGroup. please download from https://github.com/Leaflet/Leaflet.markercluster
	 * @param {geojson} geojson
	 * @param {L_geojson_options} L.geojson.options. please refer to https://github.com/Leaflet/Leaflet.markercluster
	 * @param {object} events, including "clusterclick", "clustermouseover"
	 * @return {object} return object includes .markercluster and .layer(L.geojson)
	 */
	markerCluster: function(geojson, L_geojson_options, events){
		var markercluster= new L.MarkerClusterGroup({spiderfyOnMaxZoom: true, showCoverageOnHover: true, zoomToBoundsOnClick: false, animateAddingMarkers:false });
		
		//add L_geojson_options to markerCluster options
		$.each(L_geojson_options, function(k,v){
			markercluster.options[k]=v;
		});
		
		if(L_geojson_options.onEachFeature){
			var clone_onEachFeature=L_geojson_options.onEachFeature;
			L_geojson_options.onEachFeature=function(feature, layer){
				clone_onEachFeature(feature, layer);
				markercluster.addLayer(layer);
			}	
		}
		
		var layer=L.geoJson(geojson, L_geojson_options);
		
		//overwrite markercluster events
		if(events){
			if(events.clusterclick){markercluster.on("clusterclick", events.clusterclick);}
			if(events.clustermouseover){markercluster.on("clustermouseover", events.clustermouseover);}
		}
		
		return markercluster
	},
	
	
	/**
	 * create a heatmap
	 * @require heatmap.js and heatmap-leaflet.js from https://github.com/sunng87/heatcanvas
	 * @param {geojson} geojson
	 * @param {object} heatCanvas options from https://github.com/sunng87/heatcanvas
	 * @return 
	 */
	heatMap: function(geojson, radius, options){
		if(!geojson){console.log("[ERROR] hdma.layer.heatMap: no geojson!");return;}
		
		//zoomLevel
		if(!radius){radius=0}
		
		//options
		if(!options){options={}}
		//options.unloadInvisibleTiles= options.unloadInvisibleTiles || true;
		//options.reuseTiles= options.reuseTiles || true;
		//options.radius= options.radius || 30;
		//options.radius= options.radius || { value: 300, absolute: true };
		//alert("Radius before heatMap = "+radius);
		options.radius= options.radius || { value: radius, absolute: true };
		options.opacity= options.opacity || 0.8;
		options.gradient= options.gradient || {
				0.45: "rgb(0,0,255)",
				0.65: "rgb(0,255,255)",
				0.85: "rgb(0,255,0)",
				0.99: "yellow",
				1.0: "rgb(255,0,0)"
		};
		
		var heatmapLayer = L.TileLayer.heatMap(options);
		
		var hitMapData={
	    	max:  1, // Always 1 in tweet data
			data: []
	    };
		
		//parse geojson
		//feature collection
		if(geojson.type=='FeatureCollection'){
			var feature;
			for(var i in geojson.features){
				feature=geojson.features[i];
				if(feature.geometry.type=='Point'){
					hitMapData.data.push({lat: feature.geometry.coordinates[1], lon: feature.geometry.coordinates[0], value: 1});
				}
			}
		}
		//features
		if(geojson instanceof Array){
			var feature;
			for(var i in geojson){
				feature=geojson[i];
				if(feature.geometry.type=='Point'){
					hitMapData.data.push({lat: feature.geometry.coordinates[1], lon: feature.geometry.coordinates[0], value: 1});
				}
			}
		}
		
		
		//heatmapLayer.setData(hitMapData.data);
		return heatmapLayer;
	},
	
	
	//basemap layers
	basemaps: {
		"Light Gray Background Map" : function(){return L.tileLayer("http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/{styleId}/256/{z}/{x}/{y}.png", {
			styleId : 22677,
			attribution : "Map Provided by <a href='http://cloudmade.com/' target='_blank'>Cloudmade</a>",
			title : "Light Gray Background Map"
		})},
		"OpenStreet Map" : function(){return L.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
			attribution : "Map Provided by <a href='http://www.openstreetmap.org/' target='_blank'>Open Street Map</a>",
			title : "OpenStreet Map",
			maxZoom:19
		})},
		"ESRI Imagery Map" : function(){
			var layer=L.layerGroup([
				L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
					serviceName: "World_Imagery",
					attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
					title : "ESRI Imagery Map"
				}),
				L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
					serviceName: "Reference/World_Boundaries_and_Places",
					attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
					title : "ESRI Imagery Map"
				})
			]);
			layer.options=layer.options || {}
			layer.options.title="ESRI Imagery Map";
			return layer
		},
		"ESRI Street Map" : function(){return L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
			serviceName: "World_Street_Map",
			attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
			title : "ESRI Street Map"
		})},
		"ESRI National Geographic Map" : function(){return L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
			serviceName: "NatGeo_World_Map",
			attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
			title : "ESRI National Geographic Map",
			maxZoom:16
		})},
		"ESRI Terrain Map" : function(){return L.layerGroup([
			L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
				serviceName: "World_Terrain_Base",
				attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
				title : "ESRI Terrain Map",
				maxZoom:13
			}),
			L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
				serviceName: "Reference/World_Reference_Overlay",
				attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
				title : "ESRI Terrain Map",
				maxZoom:13
			}),
		])},
		"ESRI Topographic Map" : function(){return L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
			serviceName: "World_Topo_Map",
			attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
			title : "ESRI Topographic Map"
		})},
		"ESRI Light Gray Map" : function(){return L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
			serviceName: "Canvas/World_Light_Gray_Base",
			attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
			title : "ESRI Light Gray Map",
			maxZoom:16
		})},
		"ESRI Ocean Map" : function(){return L.tileLayer("http://server.arcgisonline.com/ArcGIS/rest/services/{serviceName}/MapServer/tile/{z}/{y}/{x}", {
			serviceName: "Ocean_Basemap",
			attribution : "Map Provided by <a href='http://www.arcgis.com/' target='_blank'>ESRI</a>",
			title : "ESRI Ocean Map",
			maxZoom:12
		})},
		"NASA NightView Map" : function(){return L.tileLayer("https://earthbuilder.googleapis.com/10446176163891957399-13737975182519107424-4/2/maptile/maps?v=2&authToken=Cgjo9hMJn-uqFhDcgMGiBQ==&x={x}&y={y}&z={z}&s=", {
			serviceName: "Night_View_Map",
			attribution : "Map Provided by  NASA Earth Observatory/NOAA NGDC",
			title : "NASA NightView Map",
			maxZoom:15
		})},
		"Google Streetmap":function(){return L.tileLayer("https://mts{s}.googleapis.com/vt?lyrs=m@207265067&src=apiv3&hl=zh-TW&x={x}&y={y}&z={z}&s=Ga&style=api%7Csmartmaps",{subdomains:"123", attribution:"Map Source from Google"})}
	},
	
	
	

	
	
	
	
	
	
	
}




